{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s_saf\\\\Desktop\\\\coffeehouse-website\\\\src\\\\components\\\\Chart\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const [showChart, setShowChart] = useState(false);\n  const onScroll = useCallback(() => {\n    if (window.scrollY > 330) {\n      setShowChart(true);\n    }\n  }, []);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n  }, [onScroll]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showChart && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 36 36\",\n          className: \"circular-chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"circle resource\",\n            strokeDasharray: \"88, 100\",\n            d: \"M18 2.0845\\r a 15.9155 15.9155 0 0 1 0 31.831\\r a 15.9155 15.9155 0 0 1 0 -31.831\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"18\",\n            y: \"20.35\",\n            className: \"percentage\",\n            children: \"88%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Our resource recovery rate. Looking for better ways to reduce our waste.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 36 36\",\n          className: \"circular-chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"circle energy\",\n            strokeDasharray: \"95, 100\",\n            d: \"M18 2.0845\\r a 15.9155 15.9155 0 0 1 0 31.831\\r a 15.9155 15.9155 0 0 1 0 -31.831\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"18\",\n            y: \"20.35\",\n            className: \"percentage\",\n            children: \"99%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u043D\\u0430\\u0448\\u0438\\u0445 \\u0420\\u043E\\u0441\\u0441\\u0438\\u0439\\u0441\\u043A\\u0438\\u0445 \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chart, \"04bblcvFm9kzGvwtEMUxIHHarKE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/s_saf/Desktop/coffeehouse-website/src/components/Chart/index.js"],"names":["React","useState","useCallback","useEffect","Chart","showChart","setShowChart","onScroll","window","scrollY","addEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAO,eAAP;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMM,QAAQ,GAAGL,WAAW,CAAC,MAAM;AAC/B,QAAIM,MAAM,CAACC,OAAP,GAAiB,GAArB,EAA0B;AACtBH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,GAJ2B,EAIzB,EAJyB,CAA5B;AAMAH,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC;AACH,GAFQ,EAEP,CAACA,QAAD,CAFO,CAAT;AAIA,sBACI;AAAA,cACKF,SAAS,iBACN;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAK,UAAA,OAAO,EAAC,WAAb;AAAyB,UAAA,SAAS,EAAC,gBAAnC;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,iBADd;AAEI,YAAA,eAAe,EAAC,SAFpB;AAGI,YAAA,CAAC,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAM,YAAA,CAAC,EAAC,IAAR;AAAa,YAAA,CAAC,EAAC,OAAf;AAAuB,YAAA,SAAS,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAcA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAK,UAAA,OAAO,EAAC,WAAb;AAAyB,UAAA,SAAS,EAAC,gBAAnC;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,eADd;AAEI,YAAA,eAAe,EAAC,SAFpB;AAGI,YAAA,CAAC,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAM,YAAA,CAAC,EAAC,IAAR;AAAa,YAAA,CAAC,EAAC,OAAf;AAAuB,YAAA,SAAS,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR,mBADJ;AAiCH,CA9CD;;GAAMD,K;;KAAAA,K;AAgDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport './styles.scss';\r\n\r\nconst Chart = () => {\r\n    const [showChart, setShowChart] = useState(false);\r\n\r\n    const onScroll = useCallback(() => {\r\n        if (window.scrollY > 330) {\r\n            setShowChart(true);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', onScroll);\r\n    },[onScroll]);\r\n\r\n    return (\r\n        <>\r\n            {showChart && (\r\n                <div className='chart-wrapper'>\r\n                    <div className='single-chart'>\r\n                        <svg viewBox='0 0 36 36' className='circular-chart'>\r\n                            <path\r\n                                className='circle resource'\r\n                                strokeDasharray='88, 100'\r\n                                d='M18 2.0845\r\n                                a 15.9155 15.9155 0 0 1 0 31.831\r\n                                a 15.9155 15.9155 0 0 1 0 -31.831'\r\n                            />\r\n                            <text x='18' y='20.35' className='percentage'>88%</text>\r\n                        </svg>\r\n                        <p>Our resource recovery rate. Looking for better ways to reduce our waste.</p>            \r\n                    </div>\r\n                <div className='single-chart'>\r\n                    <svg viewBox='0 0 36 36' className='circular-chart'>\r\n                        <path\r\n                            className='circle energy'\r\n                            strokeDasharray='95, 100'\r\n                            d='M18 2.0845\r\n                            a 15.9155 15.9155 0 0 1 0 31.831\r\n                            a 15.9155 15.9155 0 0 1 0 -31.831'\r\n                        />\r\n                        <text x='18' y='20.35' className='percentage'>99%</text>\r\n                    </svg>\r\n                    <p>Процент использования наших Российских продуктов</p>            \r\n                </div>           \r\n            </div>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}