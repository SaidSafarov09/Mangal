{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s_saf\\\\Desktop\\\\coffeehouse-website\\\\src\\\\components\\\\Quiz\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles.scss';\nimport { quizQuestions } from '../../data/quizQuestions';\nimport Button from '../../components/Button';\nimport Radio from './Radio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoffeeQuiz = () => {\n  _s();\n\n  const [answers, setAnswers] = useState({\n    q1: '',\n    q2: '',\n    q3: '',\n    q4: '',\n    q5: '',\n    q6: '',\n    q7: '',\n    q8: '',\n    q9: '',\n    q10: ''\n  }); // save the value of each answer\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setAnswers({ ...answers,\n      [target.id]: target.value\n    });\n  };\n\n  const [slide, setSlide] = useState(0);\n\n  function handleClick() {\n    if (slide < quizQuestions.length - 1) {\n      setSlide(slide + 1);\n    } else {\n      setSlide(slide + 1);\n      showScore();\n    }\n  } // compare and calculate right answers to show score\n\n\n  const [result, setResult] = useState(null);\n\n  function showScore() {\n    const score = quizQuestions.filter(_ref2 => {\n      let {\n        id,\n        answer\n      } = _ref2;\n      return answers[id] === answer;\n    });\n    setResult(`${score.length} из ${quizQuestions.length}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"FastFood \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), \"\\u041A\\u0432\\u0438\\u0437\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => event.preventDefault(),\n      children: [quizQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(Radio, {\n        active: slide === index,\n        value: answers[question.id],\n        onChange: handleChange,\n        ...question\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)), result ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u044B \\u043D\\u0430\\u0431\\u0440\\u0430\\u043B\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        type: \"button\",\n        text: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoffeeQuiz, \"GNQreEac//3qwJfLz+doRXEVArI=\");\n\n_c = CoffeeQuiz;\nexport default CoffeeQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoffeeQuiz\");","map":{"version":3,"sources":["C:/Users/s_saf/Desktop/coffeehouse-website/src/components/Quiz/index.js"],"names":["React","useState","quizQuestions","Button","Radio","CoffeeQuiz","answers","setAnswers","q1","q2","q3","q4","q5","q6","q7","q8","q9","q10","handleChange","target","id","value","slide","setSlide","handleClick","length","showScore","result","setResult","score","filter","answer","event","preventDefault","map","question","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC;AACnCO,IAAAA,EAAE,EAAE,EAD+B;AAEnCC,IAAAA,EAAE,EAAE,EAF+B;AAGnCC,IAAAA,EAAE,EAAE,EAH+B;AAInCC,IAAAA,EAAE,EAAE,EAJ+B;AAKnCC,IAAAA,EAAE,EAAE,EAL+B;AAMnCC,IAAAA,EAAE,EAAE,EAN+B;AAOnCC,IAAAA,EAAE,EAAE,EAP+B;AAQnCC,IAAAA,EAAE,EAAE,EAR+B;AASnCC,IAAAA,EAAE,EAAE,EAT+B;AAUnCC,IAAAA,GAAG,EAAE;AAV8B,GAAD,CAAtC,CAFqB,CAerB;;AACA,QAAMC,YAAY,GAAG,QAAgB;AAAA,QAAf;AAAEC,MAAAA;AAAF,KAAe;AACjCZ,IAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAc,OAACa,MAAM,CAACC,EAAR,GAAaD,MAAM,CAACE;AAAlC,KAAD,CAAV;AACH,GAFD;;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,CAAD,CAAlC;;AAEA,WAASuB,WAAT,GAAuB;AACvB,QAAIF,KAAK,GAAGpB,aAAa,CAACuB,MAAd,GAAuB,CAAnC,EAAsC;AAClCF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,KAFD,MAEO;AACHC,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAI,MAAAA,SAAS;AACZ;AACA,GA7BoB,CA+BrB;;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,IAAD,CAApC;;AAEA,WAASyB,SAAT,GAAqB;AACrB,UAAMG,KAAK,GAAG3B,aAAa,CAAC4B,MAAd,CAAqB;AAAA,UAAC;AAAEV,QAAAA,EAAF;AAAMW,QAAAA;AAAN,OAAD;AAAA,aAAoBzB,OAAO,CAACc,EAAD,CAAP,KAAgBW,MAApC;AAAA,KAArB,CAAd;AACIH,IAAAA,SAAS,CAAE,GAAEC,KAAK,CAACJ,MAAO,OAAMvB,aAAa,CAACuB,MAAO,EAA5C,CAAT;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAA,gCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAM,MAAA,QAAQ,EAAGO,KAAD,IAAWA,KAAK,CAACC,cAAN,EAA3B;AAAA,iBACC/B,aAAa,CAACgC,GAAd,CAAkB,CAACC,QAAD,EAAWC,KAAX,kBACf,QAAC,KAAD;AAEI,QAAA,MAAM,EAAEd,KAAK,KAAKc,KAFtB;AAGI,QAAA,KAAK,EAAE9B,OAAO,CAAC6B,QAAQ,CAACf,EAAV,CAHlB;AAII,QAAA,QAAQ,EAAEF,YAJd;AAAA,WAKQiB;AALR,SACSA,QAAQ,CAACf,EADlB;AAAA;AAAA;AAAA;AAAA,cADH,CADD,EAUCO,MAAM,gBACH;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,gBAMH,QAAC,MAAD;AACI,QAAA,OAAO,EAAEH,WADb;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,IAAI,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CArED;;GAAMnB,U;;KAAAA,U;AAsEN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './styles.scss';\r\n\r\nimport { quizQuestions } from '../../data/quizQuestions';\r\nimport Button from '../../components/Button';\r\n\r\nimport Radio from './Radio';\r\n\r\nconst CoffeeQuiz = () => {\r\n\r\n    const [answers, setAnswers] = useState({\r\n        q1: '',\r\n        q2: '',\r\n        q3: '',\r\n        q4: '',\r\n        q5: '',\r\n        q6: '',\r\n        q7: '',\r\n        q8: '',\r\n        q9: '',\r\n        q10: '',\r\n    });\r\n\r\n    // save the value of each answer\r\n    const handleChange = ({ target }) => {\r\n        setAnswers({ ...answers, [target.id]: target.value });\r\n    };\r\n\r\n    const [slide, setSlide] = useState(0);\r\n\r\n    function handleClick() {\r\n    if (slide < quizQuestions.length - 1) {\r\n        setSlide(slide + 1);\r\n    } else {\r\n        setSlide(slide + 1);\r\n        showScore();\r\n    }\r\n    }\r\n\r\n    // compare and calculate right answers to show score\r\n    const [result, setResult] = useState(null);\r\n\r\n    function showScore() {\r\n    const score = quizQuestions.filter(({ id, answer }) => answers[id] === answer);\r\n        setResult(`${score.length} из ${quizQuestions.length}`);\r\n    }\r\n\r\n    return (\r\n        <div className='quiz-content'>\r\n            <div className='page-header'>\r\n                <h1><span>FastFood </span>Квиз</h1>\r\n            </div>\r\n            <form onSubmit={(event) => event.preventDefault()}>\r\n            {quizQuestions.map((question, index) => (\r\n                <Radio\r\n                    key={question.id}\r\n                    active={slide === index}\r\n                    value={answers[question.id]}\r\n                    onChange={handleChange}\r\n                    {...question}\r\n                />\r\n            ))}\r\n            {result ? (\r\n                <div className='quiz-result'>\r\n                    <h2>Вы набрали</h2>\r\n                    <h1>{result}</h1>\r\n                </div>\r\n            ) : (\r\n                <Button\r\n                    onClick={handleClick}\r\n                    type='button'\r\n                    text='Next'\r\n                />\r\n            )}\r\n            </form>\r\n        </div>\r\n  );\r\n};\r\nexport default CoffeeQuiz;\r\n"]},"metadata":{},"sourceType":"module"}