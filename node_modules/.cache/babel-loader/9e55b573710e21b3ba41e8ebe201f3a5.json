{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    firstname: '',\n    lastname: '',\n    phone: '',\n    email: '',\n    email2: '',\n    message: '',\n    select: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors, isSubmitting, callback]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"2WW1WKIQ0nLqceCJUazWAOHQVk8=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/s_saf/Desktop/coffeehouse-website/src/hooks/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","firstname","lastname","phone","email","email2","message","select","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","target","name","value","handleSubmit","e","preventDefault","Object","keys","length"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,SAAS,EAAE,EADwB;AAEnCC,IAAAA,QAAQ,EAAE,EAFyB;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,KAAK,EAAE,EAJ4B;AAKnCC,IAAAA,MAAM,EAAE,EAL2B;AAMnCC,IAAAA,OAAO,EAAE,EAN0B;AAOnCC,IAAAA,MAAM,EAAE;AAP2B,GAAD,CAApC;AAUA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMkB,YAAY,GAAG,QAAgB;AAAA,QAAf;AAAEC,MAAAA;AAAF,KAAe;AACnC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,MAAxB;AACAb,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACe,IAAD,GAAQC;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AAEAT,IAAAA,SAAS,CAACX,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAY,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GALD;;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,YAAxC,EAAsD;AACpDb,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACW,MAAD,EAASE,YAAT,EAAuBb,QAAvB,CAJM,CAAT;AAMA,SAAO;AAAEe,IAAAA,YAAF;AAAgBI,IAAAA,YAAhB;AAA8BjB,IAAAA,MAA9B;AAAsCS,IAAAA;AAAtC,GAAP;AACD,CApCD;;GAAMZ,O;;AAsCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    phone: '',\r\n    email: '',\r\n    email2: '',\r\n    message: '',\r\n    select: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors, isSubmitting, callback]);\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}